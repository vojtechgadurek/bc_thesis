%
%  An example of a bibliographical database in BibTeX format,
%  which is used by biblatex to create the list of referenced works.
%
%  Academic search engines and software for maintenance of bibliography
%  often supports exporting records in BibTeX format. We recommend:
%
%    - Google Scholar (https://scholar.google.com/)
%    - JabRef (https://www.jabref.org/)
%    - zoterobib (https://zbib.org/)
%
%  BEWARE:
%
%    *  If a name contains a capital letter, which must be kept such,
%       use curly brackets ({T}hailand, {HIV}).
%  ===========================================================================
%
@inproceedings{DBLP:conf/soda/Molloy04,
  author       = {Michael Molloy},
  editor       = {J. Ian Munro},
  title        = {The pure literal rule threshold and cores in random hypergraphs},
  booktitle    = {Proceedings of the Fifteenth Annual {ACM-SIAM} Symposium on Discrete
                  Algorithms, {SODA} 2004, New Orleans, Louisiana, USA, January 11-14,
                  2004},
  pages        = {672--681},
  publisher    = {{SIAM}},
  year         = {2004},
  url          = {http://dl.acm.org/citation.cfm?id=982792.982896},
  timestamp    = {Thu, 24 Mar 2022 09:38:31 +0100},
  biburl       = {https://dblp.org/rec/conf/soda/Molloy04.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inbook{doi:10.1137/1.9781611977585.ch21,
author = {Jakob Bæk Tejs Houen and Rasmus Pagh and Stefan Walzer},
title = {Simple Set Sketching},
booktitle = {2023 Symposium on Simplicity in Algorithms (SOSA)},
chapter = {},
pages = {228-241},
doi = {10.1137/1.9781611977585.ch21},
URL = {https://epubs.siam.org/doi/abs/10.1137/1.9781611977585.ch21},
eprint = {https://epubs.siam.org/doi/pdf/10.1137/1.9781611977585.ch21},
    abstract = { Imagine handling collisions in a hash table by storing, in each cell, the bit-wise exclusive-or of the set of keys hashing there. This appears to be a terrible idea: For an keys and n buckets, where α is constant, we expect that a constant fraction of the keys will be unrecoverable due to collisions. We show that if this collision resolution strategy is repeated three times independently the situation reverses: If α is below a threshold of ≈ 0.81 then we can recover the set of all inserted keys in linear time with high probability. Even though the description of our data structure is simple, its analysis is nontrivial. Our approach can be seen as a variant of the Invertible Bloom Filter (IBF) of Eppstein and Goodrich. While IBFs involve an explicit checksum per bucket to decide whether the bucket stores a single key, we exploit the idea of quotienting, namely that some bits of the key are implicit in the location where it is stored. We let those serve as an implicit checksum. These bits are not quite enough to ensure that no errors occur and the main technical challenge is to show that decoding can recover from these errors. }
}

@article{DBLP:journals/corr/abs-1204-2131,
  author       = {Michael Rink},
  title        = {On Thresholds for the Appearance of 2-cores in Mixed Hypergraphs},
  journal      = {CoRR},
  volume       = {abs/1204.2131},
  year         = {2012},
  url          = {http://arxiv.org/abs/1204.2131},
  eprinttype    = {arXiv},
  eprint       = {1204.2131},
  timestamp    = {Mon, 13 Aug 2018 16:47:12 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1204-2131.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@misc{Generics1,
    key = {Generics},
    note = {learn.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/generics-in-the-run-time}
}
